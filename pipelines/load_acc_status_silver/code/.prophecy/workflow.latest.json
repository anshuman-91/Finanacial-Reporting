{
  "metainfo" : {
    "id" : "1",
    "language" : "python",
    "fabricId" : "1010",
    "frontEndLanguage" : "sql",
    "mode" : "batch",
    "interimMode" : "Full",
    "udfs" : {
      "language" : "python",
      "udfs" : [ ]
    },
    "udafs" : {
      "language" : "python",
      "code" : ""
    },
    "configuration" : {
      "common" : {
        "type" : "record",
        "fields" : [ ]
      },
      "fabrics" : {
        "recipes_fabric" : {
          "type" : "record",
          "fields" : [ ]
        },
        "anshuman" : {
          "type" : "record",
          "fields" : [ ]
        },
        "gamedayfabric" : {
          "type" : "record",
          "fields" : [ ]
        },
        "anshuman2" : {
          "type" : "record",
          "fields" : [ ]
        }
      }
    },
    "sparkConf" : [ ],
    "hadoopConf" : [ ],
    "codeMode" : "sparse",
    "buildSystem" : "maven",
    "externalDependencies" : [ ]
  },
  "connections" : [ {
    "id" : "aoeBbzap00h8Zv4DadOH5",
    "source" : "5W9zaAQrNBOgWxOxA9j-S$$b9rBFca-nJF0IFU5T3dga",
    "sourcePort" : "IBAgAoHw0rPl6i3Tgu0Nn$$6LBDXNy3cxwE_5ibnY4Un",
    "target" : "MkmNs9NXv53w3KIgjqjy2$$yN2nZ2XCf2R9SUsFyjI20",
    "targetPort" : "9zrdvQ2Gah9w79zUPhMvD$$GhySVjBwfGKWqe8jX32tv"
  }, {
    "id" : "Dlndz9kuBp0-wZ5SBNxnR",
    "source" : "MkmNs9NXv53w3KIgjqjy2$$yN2nZ2XCf2R9SUsFyjI20",
    "sourcePort" : "JpF2yGSUZmIwgWahZPJ6y$$lBefnBSMW8gRPT3j5PKAK",
    "target" : "V3DNwnKmRHvrF-ZJTIXNM$$lLdiTp1fXfabqdp5ZD13d",
    "targetPort" : "hemfZ45iWNOIWrk0JvDA4$$Pxz1t9zPqNtRGk-9Tge96"
  }, {
    "id" : "MzLWU5nqeDbqqwVbGG5j7",
    "source" : "V3DNwnKmRHvrF-ZJTIXNM$$lLdiTp1fXfabqdp5ZD13d",
    "sourcePort" : "YN2oLNjk_jG_eap_AcT56$$KyqZnkJO6yZt0_OZRuX5r",
    "target" : "rpavCSmkHKEgijqB9Pw2_$$YhWGcEEHifV4MBmZRztuP",
    "targetPort" : "HKLlr78ax77b3abnDekVF$$oXlm-yBvV_ISds8ssDCxV"
  }, {
    "id" : "is7amTILpgV4KvadXL7Dq",
    "source" : "rpavCSmkHKEgijqB9Pw2_$$YhWGcEEHifV4MBmZRztuP",
    "sourcePort" : "_3D0PvNbvGRrDt_k2K0ZA$$4NHpOcW8BxiHBD58A4pgm",
    "target" : "y907KHbBqwEBE4Rv1ImjX$$5XSvb7eGP90c6HeE35gLw",
    "targetPort" : "NmJc26obdHKKbzgM1PUjX$$1Y9pix_spFM8ydXId3B6o"
  }, {
    "id" : "pygRKdQxeqNK8BQDwlD3n",
    "source" : "y907KHbBqwEBE4Rv1ImjX$$5XSvb7eGP90c6HeE35gLw",
    "sourcePort" : "8wCzzRRC_RQd3LCBTjVhG$$6zfLhyltqgr0MNJglAPNF",
    "target" : "MmimlghcPXRq2wmIPMzzr$$8bWjjLC-ez1CRT9QI2N1W",
    "targetPort" : "LW2HC7s8GHaWyqBGS0_YN$$Iw0rwyu3-nVAQN9uN3Qzq"
  } ],
  "processes" : {
    "rpavCSmkHKEgijqB9Pw2_$$YhWGcEEHifV4MBmZRztuP" : {
      "id" : "rpavCSmkHKEgijqB9Pw2_$$YhWGcEEHifV4MBmZRztuP",
      "component" : "Script",
      "metadata" : {
        "label" : "dvr",
        "slug" : "dvr",
        "x" : 339.9000000000009,
        "y" : 142.00000000000006,
        "language" : "python",
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "HKLlr78ax77b3abnDekVF$$oXlm-yBvV_ISds8ssDCxV",
          "slug" : "in0"
        } ],
        "outputs" : [ {
          "id" : "_3D0PvNbvGRrDt_k2K0ZA$$4NHpOcW8BxiHBD58A4pgm",
          "slug" : "out0"
        } ],
        "selectedInputFields" : [ ]
      },
      "properties" : {
        "script" : "if (in0.filter(col(\"balance\") < 0).count() > 0):\r\n    raise Exception(\"Found negative account balances\")\r\nout0 = in0\r\n    ",
        "scriptMethodHeader" : "def Script(spark: SparkSession, in0: DataFrame) -> DataFrame:",
        "scriptMethodFooter" : "    return out0"
      }
    },
    "V3DNwnKmRHvrF-ZJTIXNM$$lLdiTp1fXfabqdp5ZD13d" : {
      "id" : "V3DNwnKmRHvrF-ZJTIXNM$$lLdiTp1fXfabqdp5ZD13d",
      "component" : "Deduplicate",
      "metadata" : {
        "label" : "dedup",
        "slug" : "dedup",
        "x" : 145.1499999999999,
        "y" : 141.9500000000001,
        "language" : "python",
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "hemfZ45iWNOIWrk0JvDA4$$Pxz1t9zPqNtRGk-9Tge96",
          "slug" : "in0"
        } ],
        "outputs" : [ {
          "id" : "YN2oLNjk_jG_eap_AcT56$$KyqZnkJO6yZt0_OZRuX5r",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ]
      },
      "properties" : {
        "columnsSelector" : [ "hemfZ45iWNOIWrk0JvDA4$$Pxz1t9zPqNtRGk-9Tge96##acc_id", "hemfZ45iWNOIWrk0JvDA4$$Pxz1t9zPqNtRGk-9Tge96##business_date" ],
        "dedupType" : "any",
        "dedupColumns" : [ {
          "colName" : "acc_id"
        }, {
          "colName" : "business_date"
        } ]
      }
    },
    "5W9zaAQrNBOgWxOxA9j-S$$b9rBFca-nJF0IFU5T3dga" : {
      "id" : "5W9zaAQrNBOgWxOxA9j-S$$b9rBFca-nJF0IFU5T3dga",
      "component" : "Source",
      "metadata" : {
        "label" : "acc_status_bronze",
        "slug" : "acc_status_bronze",
        "x" : -237.59999999999982,
        "y" : 142.20000000000022,
        "language" : "python",
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "IBAgAoHw0rPl6i3Tgu0Nn$$6LBDXNy3cxwE_5ibnY4Un",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ]
      },
      "properties" : {
        "datasetId" : "5468/datasets/acc_status_bronze"
      }
    },
    "MmimlghcPXRq2wmIPMzzr$$8bWjjLC-ez1CRT9QI2N1W" : {
      "id" : "MmimlghcPXRq2wmIPMzzr$$8bWjjLC-ez1CRT9QI2N1W",
      "component" : "Target",
      "metadata" : {
        "label" : "acc_status_silver",
        "slug" : "acc_status_silver",
        "x" : 720.8999999999993,
        "y" : 142.40000000000003,
        "language" : "python",
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "LW2HC7s8GHaWyqBGS0_YN$$Iw0rwyu3-nVAQN9uN3Qzq",
          "slug" : "in0"
        } ],
        "outputs" : [ ],
        "selectedInputFields" : [ ]
      },
      "properties" : {
        "datasetId" : "5468/datasets/acc_status_silver"
      }
    },
    "y907KHbBqwEBE4Rv1ImjX$$5XSvb7eGP90c6HeE35gLw" : {
      "id" : "y907KHbBqwEBE4Rv1ImjX$$5XSvb7eGP90c6HeE35gLw",
      "component" : "SchemaTransform",
      "metadata" : {
        "label" : "milestone_keys",
        "slug" : "milestone_keys",
        "x" : 526.1499999999997,
        "y" : 142.40000000000015,
        "language" : "python",
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "NmJc26obdHKKbzgM1PUjX$$1Y9pix_spFM8ydXId3B6o",
          "slug" : "in0"
        } ],
        "outputs" : [ {
          "id" : "8wCzzRRC_RQd3LCBTjVhG$$6zfLhyltqgr0MNJglAPNF",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ]
      },
      "properties" : {
        "columnsSelector" : [ ],
        "transformations" : [ {
          "kind" : "AddReplaceColumn",
          "AddReplaceColumn" : {
            "sourceColumn" : "import_ts",
            "expression" : {
              "format" : "sql",
              "expression" : "current_timestamp()"
            }
          },
          "DropColumn" : {
            "sourceColumn" : ""
          },
          "RenameColumn" : {
            "sourceColumn" : "",
            "targetColumn" : ""
          }
        } ]
      }
    },
    "MkmNs9NXv53w3KIgjqjy2$$yN2nZ2XCf2R9SUsFyjI20" : {
      "id" : "MkmNs9NXv53w3KIgjqjy2$$yN2nZ2XCf2R9SUsFyjI20",
      "component" : "Script",
      "metadata" : {
        "label" : "null_check",
        "slug" : "null_check",
        "x" : -52.600000000000186,
        "y" : 142.20000000000022,
        "language" : "python",
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "9zrdvQ2Gah9w79zUPhMvD$$GhySVjBwfGKWqe8jX32tv",
          "slug" : "in0"
        } ],
        "outputs" : [ {
          "id" : "JpF2yGSUZmIwgWahZPJ6y$$lBefnBSMW8gRPT3j5PKAK",
          "slug" : "out0"
        } ],
        "selectedInputFields" : [ ]
      },
      "properties" : {
        "script" : "if (in0.filter(\r\n    col(\"acc_id\").isNull()\r\n    | col(\"person_id\").isNull()\r\n    | col(\"product_id\").isNull()\r\n    | col(\"business_date\").isNull()\r\n    | col(\"balance\").isNull()\r\n    ).count()> 0):\r\n    raise Exception(\"Schema Validation Failed\")\r\n\r\nout0 = in0\r\n",
        "scriptMethodHeader" : "def Script(spark: SparkSession, in0: DataFrame) -> DataFrame:",
        "scriptMethodFooter" : "    return out0"
      }
    }
  },
  "ports" : {
    "inputs" : [ ],
    "outputs" : [ ],
    "selectedInputFields" : [ ]
  }
}